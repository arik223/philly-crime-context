{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;\csgray\c100000;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Ariel Shaposhnik\
Cameron Pascal\
Dean Keinan
\b \ul \

\fs48 Readme\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0\fs28 \cf0 \ulc0 Infrastructure\

\fs24 \ulnone We used Heroku for our infrastructure and deployment. Heroku handles deployment for us through git commands, when we push to our GitHub Heroku recognizes it and updates our project accordingly. Furthermore it was very easy to set up.\

\b\fs48 \ul \ulc0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\b0\fs28 \cf0 \ulc0 Database\

\fs24 \ulnone For our database we chose to utilize PostgreSQL. We had a few reasons to do this, one of which being that PostgreSQL is very advanced, it has complete support for reliable transactions. This way we would ensure Atomicity and Consistency of our database. PostgreSQL is extremely efficient and can handle many tasks at once. Another very important reason we used PostgreSQL is because of its many data types, since our project aims to show data on an Interactable map, having shape, path and point datatypes really helped bring everything together. \
\
We compiled different points of data, in our database we have Philly crime data for the last 10 years, this includes the location, type of crime among other identifies that we added. We used foreign keys to link up our data bases.\
\
We got weather data for the last 10, we referenced back to the crimes, one day of weather had a reference to many crimes in the crime table.\
\
We got census tracts in Philly, and using the same technique we did with weather, we linked up many crimes to the census tracts they occurred in. This is where our shape types came in very useful. The census tract consisted of two other tables, specifically economic data and demographic data per tract. Each of those linked back to the census tract which in turn linked back to crime in order to easily find what we are looking for.\
\

\fs28 \ul Backend\

\fs24 \ulnone For our communication with the database we decided to build a RESTful api server with Express. To build this we used node.js. The main reasons we decided to utilize node is because it is quick and easy to set up, it handles the dependencies for you, and horuku supported it. Our server is built as a middleware between the client end and database. The server handles GET requests from the client, then executes the appropriate query, and returns a JSON file which is easy to read from the front end.\

\fs28 \ul \
Frontend\

\fs24 \ulnone Our front end was created in javascript using j-query and infragistic web tools
\fs28 \ul \

\fs24 \ulnone \
}